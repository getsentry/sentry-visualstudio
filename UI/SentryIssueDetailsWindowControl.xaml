<UserControl x:Class="VSSentry.UI.SentryIssueDetailsWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:sentry="clr-namespace:VSSentry;assembly=VSSentry"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
             xmlns:ui="clr-namespace:VSSentry.UI;assembly=VSSentry"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             d:DataContext="{d:DesignInstance Type=ui:SentryIssueDetailsViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Name="MyToolWindow">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid Visibility="{Binding ContentVisible}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            
            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Visibility="{Binding EventListLoadingVisible}" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Image Source="pack://application:,,,/VSSentry;component/Resources/sentry-wordmark-light-200x60.png" Width="200" Margin="0, 20, 0, 10" HorizontalAlignment="Center"/>
                <ProgressBar IsIndeterminate="True" Height="20" MaxWidth="300" Margin="20"></ProgressBar>
            </StackPanel>
            <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Visibility="{Binding EventListVisible}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Events" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}" Margin="10, 10, 10, 0"/>
                <ListBox Grid.Row="2" HorizontalAlignment="Stretch" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.ThemedDialogListBoxStyleKey}}" ItemsSource="{Binding EventList}" Margin="10" Padding="10" SelectedItem="{Binding SelectedEvent}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Padding="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.RowSpan="3" VerticalAlignment="Center" FontWeight="Bold" Foreground="Red" Margin="10, 0, 20, 0" Text="!"/>
                                    <TextBlock Grid.Column="1" Text="{Binding dateCreated}" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}"/>
                                    <TextBlock Grid.Column="2" Text=" - Exception" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding message}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding title, StringFormat='Exception type: {0}'}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <Border Visibility="{Binding SentryEvent.HasUserData, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="1" Background="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUIBackgroundKey}}" BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUIBorderKey}}" BorderThickness="2" Margin="0, 10, 5, 10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding SentryEvent.user.email}"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding SentryEvent.user.id}"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SentryEvent.contexts.browser.name}"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SentryEvent.contexts.browser.version}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding SentryEvent.contexts.client_os.name}"/>
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding SentryEvent.contexts.client_os.version}"/>
                    <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding SentryEvent.contexts.device.type}"/>
                </Grid>
            </Border>
            <Border Grid.Row="1" Grid.Column="1" Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}" BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUIBorderKey}}" BorderThickness="2" Margin="0, 10, 5, 10">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <ResourceDictionary>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style>
                                </ResourceDictionary>
                            </Grid.Resources>
                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="10" Text="Message" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}"></TextBlock>
                            <TextBox Grid.Row="0" Grid.Column="1" Padding="10" Text="{Binding SentryIssue.title}"></TextBox>
                            <TextBlock Grid.Row="1" Grid.Column="0" Margin="10" Text="Culprit" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}"></TextBlock>
                            <TextBox Grid.Row="1" Grid.Column="1" Padding="10" Text="{Binding SentryIssue.culprit}"></TextBox>
                            <TextBlock Grid.Row="2" Grid.Column="0" Margin="10" Text="Current Event Date" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}"></TextBlock>
                            <TextBox Grid.Row="2" Grid.Column="1" Padding="10" Text="{Binding SentryEvent.dateCreated}"></TextBox>
                            <TextBlock Grid.Row="3" Grid.Column="0" Margin="10" Text="Last Seen" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}"></TextBlock>
                            <TextBox Grid.Row="3" Grid.Column="1" Padding="10" Text="{Binding SentryIssue.lastSeen}"></TextBox>
                            <TextBlock Grid.Row="4" Grid.Column="0" Margin="10" Text="First Seen" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}"></TextBlock>
                            <TextBox Grid.Row="4" Grid.Column="1" Padding="10" Text="{Binding SentryIssue.firstSeen}"></TextBox>
                            <TextBlock Grid.Row="5" Grid.Column="0" Margin="10" Text="Stacktrace" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}"></TextBlock>
                            <ItemsControl Grid.Row="5" Grid.Column="1" Margin="10" ItemsSource="{Binding SentryEvent.Stacktrace.frames}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.Resources>
                                                <Style TargetType="TextBox">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="IsReadOnly" Value="True"/>
                                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Clickable}" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ControlLinkTextKey}}"/>
                                                            <Setter Property="Cursor" Value="Hand"/>
                                                            <Setter Property="TextDecorations" Value="Underline"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Resources>
                                            <TextBox Text="{Binding Text, Mode=OneWay}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <StackPanel Grid.Row="6" Grid.ColumnSpan="2" Orientation="Vertical" Margin="10">
                                <StackPanel Orientation="Horizontal">
                                    <TextBox Text="GET" FontWeight="Bold"/>
                                    <TextBox Text="{Binding SentryEvent}"/>
                                </StackPanel>
                            </StackPanel>
                            <TextBlock Grid.Row="7" Grid.ColumnSpan="2" Text="Packages" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}" Margin="10, 10, 10, 0"/>
                            <ListBox Grid.Row="8" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.ThemedDialogListBoxStyleKey}}" ItemsSource="{Binding SentryEvent.packages}" Margin="10" Padding="10" Height="300">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="100"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Key}"/>
                                            <TextBlock Text="{Binding Value}" HorizontalAlignment="Right" Grid.Column="1"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                        <Grid Grid.Row="1">                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid Margin="10, 5">
                                <ProgressBar IsIndeterminate="{Binding IsLoadingEvent}" Height="15" VerticalAlignment="Center"></ProgressBar>                
                            </Grid>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                                <Button Style="{DynamicResource {x:Static vsshell:VsResourceKeys.ButtonStyleKey}}" Command="{Binding SentryIssue.OpenInBrowserCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Open in Sentry"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ScrollViewer>                
            </Border>
            
            <GridSplitter Grid.RowSpan="2" Grid.Column="2" Margin="2,0,2,0"
                  Width="5" Background="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUIBackgroundKey}}"
                  VerticalAlignment="Stretch" 
                  HorizontalAlignment="Center" />
            <Border Grid.RowSpan="2" Grid.Column="3" Background="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUIBackgroundKey}}" BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUIBorderKey}}" BorderThickness="2" Margin="5, 10, 10, 10">
                <StackPanel Orientation="Vertical">                    
                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="10" Text="Tags" Style="{DynamicResource {x:Static vsshell:VsResourceKeys.TextBlockEnvironmentBoldStyleKey}}"></TextBlock>
                    <ItemsControl Grid.Row="4" Grid.Column="1" Margin="10" ItemsSource="{Binding SentryEvent.tags}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBox Text="{Binding key}" Width="150" FontWeight="Bold"/>
                                    <TextBox Text="{Binding value}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
        </Grid>
        <Grid Visibility="{Binding LoadingVisible}">
            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                <Image Source="pack://application:,,,/VSSentry;component/Resources/sentry-wordmark-light-200x60.png" Width="200" Margin="0, 20, 0, 10" HorizontalAlignment="Center"/>
                <ProgressBar IsIndeterminate="True" Height="20" MaxWidth="300" Margin="20"></ProgressBar>
            </StackPanel>
        </Grid>
        <Grid Visibility="{Binding ErrorVisible}">
            <TextBlock Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Red" Text="{Binding ErrorMessage}"></TextBlock>
        </Grid>
    </Grid>
</UserControl>
